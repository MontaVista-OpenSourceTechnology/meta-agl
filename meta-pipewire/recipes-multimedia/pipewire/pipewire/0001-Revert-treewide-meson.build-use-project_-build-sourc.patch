From e850a4c080c80fc218224521727996062ebb9487 Mon Sep 17 00:00:00 2001
From: Ashok Sidipotu <ashok.sidipotu@collabora.com>
Date: Fri, 14 Jan 2022 16:12:55 +0530
Subject: [PATCH 1/4] Revert "treewide: meson.build: use
 project_{build,source}_root()"

This reverts commit 8ed46a283fa1f8623b940eaeb9f7cbcc52eebf0e.
Upstream-Status: Inappropriate[meson version dependent]
---
 doc/meson.build                      | 34 ++++++++++++++--------------
 meson.build                          |  8 +++----
 spa/plugins/audioconvert/meson.build |  4 ++--
 spa/tests/meson.build                |  4 ++--
 src/daemon/meson.build               |  6 ++---
 src/modules/meson.build              |  6 ++---
 src/tests/meson.build                |  6 ++---
 test/meson.build                     |  4 ++--
 8 files changed, 36 insertions(+), 36 deletions(-)

diff --git a/doc/meson.build b/doc/meson.build
index 0e6d7f8e3..082780145 100644
--- a/doc/meson.build
+++ b/doc/meson.build
@@ -1,8 +1,8 @@
 doxyfile_conf = configuration_data()
 doxyfile_conf.set('PACKAGE_NAME', meson.project_name())
 doxyfile_conf.set('PACKAGE_VERSION', meson.project_version())
-doxyfile_conf.set('top_srcdir', meson.project_source_root())
-doxyfile_conf.set('top_builddir', meson.project_build_root())
+doxyfile_conf.set('top_srcdir', meson.source_root())
+doxyfile_conf.set('top_builddir', meson.build_root())
 
 dot_found = find_program('dot', required: false).found()
 summary({'dot (used with doxygen)': dot_found}, bool_yn: true, section: 'Optional programs')
@@ -49,35 +49,35 @@ extra_docs = [
 
 inputs = []
 foreach extra : extra_docs
-  inputs += meson.project_source_root() / 'doc' / extra
+  inputs += meson.source_root() / 'doc' / extra
 endforeach
 foreach h : pipewire_headers
-  inputs += meson.project_source_root() / 'src' / 'pipewire' / h
+  inputs += meson.source_root() / 'src' / 'pipewire' / h
 endforeach
 foreach h : pipewire_ext_headers
-  inputs += meson.project_source_root() / 'src' / 'pipewire' / 'extensions' / h
+  inputs += meson.source_root() / 'src' / 'pipewire' / 'extensions' / h
 endforeach
 foreach h : pipewire_ext_sm_headers
-  inputs += meson.project_source_root() / 'src' / 'pipewire' / 'extensions' / h
+  inputs += meson.source_root() / 'src' / 'pipewire' / 'extensions' / h
 endforeach
 foreach h : pipewire_sources
-  inputs += meson.project_source_root() / 'src' / 'pipewire' / h
+  inputs += meson.source_root() / 'src' / 'pipewire' / h
 endforeach
 foreach h : module_sources
-  inputs += meson.project_source_root() / 'src' / 'modules' / h
+  inputs += meson.source_root() / 'src' / 'modules' / h
 endforeach
-inputs += meson.project_source_root() / 'test' / 'pwtest.h'
-input_dirs = [ meson.project_source_root() / 'spa' / 'include' / 'spa' ]
+inputs += meson.source_root() / 'test' / 'pwtest.h'
+input_dirs = [ meson.source_root() / 'spa' / 'include' / 'spa' ]
 
 path_prefixes = [
-  meson.project_source_root() / 'src',
-  meson.project_source_root() / 'spa' / 'include',
-  meson.project_source_root(),
+  meson.source_root() / 'src',
+  meson.source_root() / 'spa' / 'include',
+  meson.source_root(),
 ]
 
 cssfiles = [
-  meson.project_source_root() / 'doc' / 'doxygen-awesome.css',
-  meson.project_source_root() / 'doc' / 'custom.css'
+  meson.source_root() / 'doc' / 'doxygen-awesome.css',
+  meson.source_root() / 'doc' / 'custom.css'
 ]
 
 # Example files (in order from simple to esoteric)
@@ -118,8 +118,8 @@ input_dirs += [ 'doc/examples.dox' ]
 doxyfile_conf.set('inputs', ' '.join(inputs + input_dirs))
 doxyfile_conf.set('cssfiles', ' '.join(cssfiles))
 doxyfile_conf.set('path_prefixes', ' '.join(path_prefixes))
-doxyfile_conf.set('c_input_filter', meson.project_source_root() / 'doc' / 'input-filter.sh')
-doxyfile_conf.set('h_input_filter', meson.project_source_root() / 'doc' / 'input-filter-h.sh')
+doxyfile_conf.set('c_input_filter', meson.source_root() / 'doc' / 'input-filter.sh')
+doxyfile_conf.set('h_input_filter', meson.source_root() / 'doc' / 'input-filter-h.sh')
 
 doxyfile = configure_file(input: 'Doxyfile.in',
                           output: 'Doxyfile',
diff --git a/meson.build b/meson.build
index b1ea32f7a..67e697c15 100644
--- a/meson.build
+++ b/meson.build
@@ -304,9 +304,9 @@ includes_inc = include_directories('include')
 pipewire_inc = include_directories('src')
 
 makedata = configuration_data()
-makedata.set('BUILD_ROOT', meson.project_build_root())
-makedata.set('SOURCE_ROOT', meson.project_source_root())
-makedata.set('VERSION', pipewire_version)
+  makedata.set('BUILD_ROOT', meson.build_root())
+  makedata.set('SOURCE_ROOT', meson.source_root())
+  makedata.set('VERSION', pipewire_version)
 if version_arr.length() == 4
   makedata.set('TAG', 'HEAD')
 else
@@ -498,7 +498,7 @@ endif
 setenv = find_program('pw-uninstalled.sh')
 run_target('pw-uninstalled',
   command : [setenv,
-             '-b@0@'.format(meson.project_build_root()),
+             '-b@0@'.format(meson.build_root()),
              '-v@0@'.format(pipewire_version)]
 )
 
diff --git a/spa/plugins/audioconvert/meson.build b/spa/plugins/audioconvert/meson.build
index de9f491af..4d15271f5 100644
--- a/spa/plugins/audioconvert/meson.build
+++ b/spa/plugins/audioconvert/meson.build
@@ -140,7 +140,7 @@ foreach a : test_apps
       install : installed_tests_enabled,
       install_dir : installed_tests_execdir / 'audioconvert'),
       env : [
-        'SPA_PLUGIN_DIR=@0@'.format(spa_dep.get_variable(internal: 'plugindir')),
+        'SPA_PLUGIN_DIR=@0@/spa/plugins/'.format(meson.build_root()),
         ])
 
     if installed_tests_enabled
@@ -170,7 +170,7 @@ foreach a : benchmark_apps
       install : installed_tests_enabled,
       install_dir : installed_tests_execdir / 'audioconvert'),
       env : [
-        'SPA_PLUGIN_DIR=@0@'.format(spa_dep.get_variable(internal: 'plugindir')),
+        'SPA_PLUGIN_DIR=@0@/spa/plugins/'.format(meson.build_root()),
         ])
 
     if installed_tests_enabled
diff --git a/spa/tests/meson.build b/spa/tests/meson.build
index 990df87bd..9e2a211e2 100644
--- a/spa/tests/meson.build
+++ b/spa/tests/meson.build
@@ -5,7 +5,7 @@ find = find_program('find', required: false)
 summary({'find (for header testing)': find.found()}, bool_yn: true, section: 'Optional programs')
 if find.found()
   spa_headers = run_command(find,
-                            meson.project_source_root() / 'spa' / 'include',
+                            meson.source_root() / 'spa' / 'include',
                             '-name', '*.h',
                             '-not', '-name', 'type-info.h',
                             '-type', 'f',
@@ -40,7 +40,7 @@ foreach a : benchmark_apps
       install_dir : installed_tests_execdir,
     ),
     env : [
-      'SPA_PLUGIN_DIR=@0@'.format(spa_dep.get_variable(internal: 'plugindir')),
+      'SPA_PLUGIN_DIR=@0@/spa/plugins/'.format(meson.build_root()),
     ]
   )
 
diff --git a/src/daemon/meson.build b/src/daemon/meson.build
index 44a574337..5e64287a1 100644
--- a/src/daemon/meson.build
+++ b/src/daemon/meson.build
@@ -18,9 +18,9 @@ conf_config.set('pulse_comment', '#')
 
 conf_config_uninstalled = conf_config
 conf_config_uninstalled.set('pipewire_path',
-  meson.project_build_root() / 'src' / 'daemon' / 'pipewire')
+  meson.build_root() / 'src' / 'daemon' / 'pipewire')
 conf_config_uninstalled.set('pipewire_pulse_path',
-  meson.project_build_root() / 'src' / 'daemon' / 'pipewire-pulse')
+  meson.build_root() / 'src' / 'daemon' / 'pipewire-pulse')
 conf_config_uninstalled.set('pulse_comment', '')
 
 build_ms = 'media-session' in get_option('session-managers')
@@ -105,7 +105,7 @@ custom_target('pipewire-uninstalled',
   install: false,
   input: pipewire_exec,
   output: 'pipewire-uninstalled',
-  command: [ln, '-fs', meson.project_build_root() + '/@INPUT@', '@OUTPUT@'],
+  command: [ln, '-fs', meson.build_root() + '/@INPUT@', '@OUTPUT@'],
 )
 
 #desktop_file = i18n.merge_file(
diff --git a/src/modules/meson.build b/src/modules/meson.build
index 93dc70173..45852f3b9 100644
--- a/src/modules/meson.build
+++ b/src/modules/meson.build
@@ -370,9 +370,9 @@ test('pw-test-protocol-native',
     install_dir : installed_tests_execdir,
   ),
   env : [
-    'SPA_PLUGIN_DIR=@0@'.format(spa_dep.get_variable(internal: 'plugindir')),
-    'PIPEWIRE_CONFIG_DIR=@0@'.format(pipewire_dep.get_variable(internal: 'confdatadir')),
-    'PIPEWIRE_MODULE_DIR=@0@'.format(pipewire_dep.get_variable(internal: 'moduledir')),
+    'SPA_PLUGIN_DIR=@0@/spa/plugins/'.format(meson.build_root()),
+    'PIPEWIRE_CONFIG_DIR=@0@/src/daemon/'.format(meson.build_root()),
+    'PIPEWIRE_MODULE_DIR=@0@/src/modules/'.format(meson.build_root())
   ]
 )
 
diff --git a/src/tests/meson.build b/src/tests/meson.build
index 3e8d05012..1b03967fb 100644
--- a/src/tests/meson.build
+++ b/src/tests/meson.build
@@ -13,9 +13,9 @@ foreach a : test_apps
       install : installed_tests_enabled,
       install_dir : installed_tests_execdir),
     env : [
-      'SPA_PLUGIN_DIR=@0@'.format(spa_dep.get_variable(internal: 'plugindir')),
-      'PIPEWIRE_CONFIG_DIR=@0@'.format(pipewire_dep.get_variable(internal: 'confdatadir')),
-      'PIPEWIRE_MODULE_DIR=@0@'.format(pipewire_dep.get_variable(internal: 'moduledir')),
+      'SPA_PLUGIN_DIR=@0@/spa/plugins/'.format(meson.build_root()),
+      'PIPEWIRE_CONFIG_DIR=@0@/src/daemon/'.format(meson.build_root()),
+      'PIPEWIRE_MODULE_DIR=@0@/src/modules/'.format(meson.build_root())
       ])
 
   if installed_tests_enabled
diff --git a/test/meson.build b/test/meson.build
index 20bdcb210..89f2bc2ec 100644
--- a/test/meson.build
+++ b/test/meson.build
@@ -14,8 +14,8 @@ pwtest_deps = [
 ]
 
 pwtest_c_args = [
-  '-DBUILD_ROOT="@0@"'.format(meson.project_build_root()),
-  '-DSOURCE_ROOT="@0@"'.format(meson.project_source_root()),
+  '-DBUILD_ROOT="@0@"'.format(meson.build_root()),
+  '-DSOURCE_ROOT="@0@"'.format(meson.source_root()),
 ]
 
 pwtest_inc = [
-- 
2.34.1

